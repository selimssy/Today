<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ali.today.diary.repository.IDiaryMapper">

	<resultMap id="CalendarMap" type="com.ali.today.diary.model.ScheduleVO">		
		<id property="scheduleId" column="schedule_id" />
		<result property="userId" column="user_id"/>
		<result property="scheduleNum" column="schedule_num"/>
		<result property="scheduleTitle" column="schedule_title"/>
		<result property="scheduleDesc" column="schedule_desc"/>
		<result property="scheduleDate" column="schedule_date"/>		
	</resultMap>

	
	<resultMap id="DiaryMap" type="com.ali.today.diary.model.DiaryVO">		
		<id property="diaryNo" column="diary_no" />
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="writer" column="writer"/>
		<result property="regDate" column="reg_date"/>
		<result property="thumbImg" column="thumb_img"/>		
	</resultMap>

	
	
	<!-- 중복되는 동적 SQL문에 대한 처리 -->
	<sql id="searchDiary">  
		<!-- 동적 SQL구문 -->
		<if test="condition == 'title'">  
		AND title LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'content'">
		AND content LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'titleContent'">
		AND (title LIKE CONCAT('%',#{keyword},'%')
		OR content LIKE CONCAT('%',#{keyword},'%'))
		</if>
	</sql>
	
	
	
	
	
	
	<!-- 스케줄 추가 -->
	<insert id="insertSchedule">
		INSERT INTO calendar(user_id, schedule_num, schedule_title, schedule_desc, schedule_date)
		VALUES(#{userId}, #{scheduleNum}, #{scheduleTitle}, #{scheduleDesc}, #{scheduleDate})
	</insert>
	
	
	<!-- 특정 날짜 스케줄 조회 -->	
	<select id="getOnedaySchedules" resultMap="CalendarMap">
		SELECT * FROM calendar
		WHERE user_id = #{userId} AND schedule_date &gt;= #{db_startDate} AND schedule_date &lt;= #{db_endDate} 
		ORDER BY schedule_date, schedule_num, schedule_id
	</select>
	
	
	<!-- 특정 스케줄 상세조회 -->
	<select id="getOnePlan" resultMap="CalendarMap">
		SELECT * FROM calendar
		WHERE schedule_id = #{scheduleId}
	</select>
	
		
	<!-- 해당 날짜 스케줄 갯수 -->
	<select id="countSchedule" resultType="int">
		SELECT COUNT(*)
		FROM calendar
		WHERE user_id = #{userId} AND schedule_date = #{scheduleDate}
	</select>
		
	
	<!-- 스케줄 수정 -->
	<update id="modifySchedule">
		UPDATE calendar
		SET schedule_num = #{scheduleNum}, schedule_title = #{scheduleTitle}, schedule_desc = #{scheduleDesc}, schedule_date = #{scheduleDate}
		WHERE schedule_id = #{scheduleId}
	</update>
	
	
	<!-- 스케줄 삭제 -->	
	<delete id="deleteSchedule">
		DELETE FROM calendar
		WHERE schedule_id = #{scheduleId}
	</delete>
	
	
	<!-- 회원 탈퇴시 모든 스케줄 삭제 -->
	<delete id="deleteAllSchedule">
		DELETE FROM calendar
		WHERE user_id = #{userId}
	</delete>
	
	
	<!-- *** 관리자 페이지 ***-->
	<!-- 전체 스케줄 갯수 -->
	<select id="scheduleCnt" resultType="int">
		SELECT COUNT(*)
		FROM calendar	
		<choose>
			<when test = "userId == null or userId.equals('')">				
			</when>
			<otherwise>
				WHERE user_id = #{userId}
			</otherwise>
		</choose>	
	</select>
	
	
	<!-- ////////////////////////////////////////////////////////////////// -->
	
	
	
	<!-- 일기 추가 -->
	<insert id="insert">
		INSERT INTO pet_diary (title, content, writer, thumb_img)
		VALUES (#{title}, #{content}, #{writer}, #{thumbImg})
	</insert>
	
	
	<!-- 특정 일기 조회 -->
	<select id="getDiary" resultMap="DiaryMap">
		SELECT *
		FROM pet_diary
		WHERE diary_no = #{diaryNo}
	</select>

	
	<!-- 해당 계정 일기 전체 조회(검색, 페이징) -->
	<select id="getDiaryList" resultMap="DiaryMap">
		SELECT *
		FROM pet_diary
		WHERE writer = #{userId}
		<include refid="searchDiary"/>
		ORDER BY reg_date DESC
		LIMIT #{pageStart}, 10 
	</select>
	
	
	<!-- 일기 삭제 -->
	<delete id="delete">
		DELETE FROM pet_diary
		WHERE diary_no = #{diaryNo}
	</delete>
	
	
	<!-- 일기 수정 -->
	<update id="update">
		UPDATE pet_diary
		SET title = #{title}, content = #{content}
		WHERE diary_no = #{diaryNo}
	</update>
	
	
	<!-- 검색 결과 일기 수 조회 -->
	<select id="countDiaries" resultType="int">
		SELECT COUNT(*)
		FROM pet_diary
		WHERE writer = #{userId}
		<include refid="searchDiary"/>
	</select>
	
	
	
	<!-- 회원탈퇴시 모든 일기 삭제 -->
	<delete id="deleteAllDiary">
		DELETE FROM pet_diary
		WHERE writer = #{userId}
	</delete>
	
	
	
	<!-- *** 관리자 페이지 ***-->
	<!-- 전체 일기 갯수 -->
	<select id="diaryCnt" resultType="int">
		SELECT COUNT(*)
		FROM pet_diary		
		<choose>
			<when test = "userId == null or userId.equals('')">				
			</when>
			<otherwise>
				WHERE writer = #{userId}
			</otherwise>
		</choose>
	</select>
	

</mapper>