<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ali.today.messenger.repository.IMessengerMapper">

	<resultMap id="MessengerMap" type="com.ali.today.messenger.model.MessengerVO">		
		<id property="msgNo" column="msg_no" />
		<result property="senderId" column="sender_id"/>
		<result property="recvId" column="recv_id"/>
		<result property="sendTime" column="send_time"/>
		<result property="content" column="content"/>
		<result property="readChk" column="read_chk"/>
	</resultMap>	

	
	<!-- 중복되는 동적 SQL문에 대한 처리(쪽지함 검색처리) -->
	<sql id="searchMsg">  
		<!-- 동적 SQL구문 -->
		<if test="condition == 'sender'">  
		AND sender_id LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'receiver'">
		AND recv_id LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'content'">
		AND content LIKE CONCAT('%',#{keyword},'%')
		</if>		
	</sql>
	
	
	
	
	<!-- 쪽지 보내기 -->
	<insert id="sendMsg">
		INSERT INTO messenger(sender_id, recv_id, content) 
		VALUES(#{senderId}, #{recvId}, #{content})
	</insert>
	
	
	<!-- 받은 쪽지 리스트 -->
	<select id="getRecvMsg" resultMap="MessengerMap">
		SELECT m.msg_no, m.content, m.send_time, m.read_chk, m.recv_id,
	    (CASE
		    WHEN m.classify = 'user' THEN (select nickname from user where user_id = m.sender_id)
		    WHEN m.classify = 'pet' THEN (select pet_name from pet where pet_id = m.sender_id)
		    WHEN m.classify = 'admin' THEN '관리자'
	    END) AS sender_id
        FROM messenger m
        WHERE recv_id = #{userId}
        <include refid="searchMsg"/>
        ORDER BY msg_no DESC
		LIMIT #{pageStart}, 10
	</select>
	
	
	<!-- 받은 쪽지 수 -->
	<select id="countRecvMsg" resultType="int">
		SELECT COUNT(*)
		FROM messenger
		WHERE recv_id = #{userId}
		<include refid="searchMsg"/>
	</select>
	

</mapper>    