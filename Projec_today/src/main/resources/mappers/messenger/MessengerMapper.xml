<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ali.today.messenger.repository.IMessengerMapper">

	<!-- TABLE messenger -->
	<resultMap id="MessengerMap" type="com.ali.today.messenger.model.MessengerVO">		
		<id property="msgNo" column="msg_no" />
		<result property="senderId" column="sender_id"/>
		<result property="recvId" column="recv_id"/>
		<result property="sendTime" column="send_time"/>
		<result property="content" column="content"/>
		<result property="readChk" column="read_chk"/>
		<result property="classify" column="classify"/>
		<result property="nick" column="nick"/>
		<result property="imagePath" column="image_path"/>
	</resultMap>	
	
	
	<!-- TABLE off_msg -->
	<resultMap id="BlockMap" type="com.ali.today.messenger.model.BlockVO">		
		<id property="blockNo" column="block_no" />
		<result property="userId" column="user_id"/>
		<result property="blockId" column="block_id"/>
		<result property="blockDate" column="block_date"/>		
		<result property="imagePath" column="image_path"/>
		<result property="nickname" column="nickname"/>
	</resultMap>	
	

	
	<!-- 중복되는 동적 SQL문에 대한 처리(쪽지함 검색처리) 관리자 페이지? -->
	<sql id="searchMsg">  
		<if test="condition == 'sender'">  
		AND sender_id LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'receiver'">
		AND recv_id LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'content'">
		AND content LIKE CONCAT('%',#{keyword},'%')
		</if>		
	</sql>
	
	
	
	
	<!-- 쪽지 보내기 -->
	<insert id="sendMsg">
		INSERT INTO messenger(sender_id, recv_id, content) 
		VALUES(#{senderId}, #{recvId}, #{content})
	</insert>
	
	
	<!-- 받은 쪽지 리스트 -->
	<select id="getRecvMsg" resultMap="MessengerMap">
		SELECT m.msg_no, m.sender_id, m.content, m.send_time, m.read_chk, m.recv_id, m.classify, u.image_path,
	    (CASE
		    WHEN m.classify = 'user' THEN (select nickname from user where user_id = m.sender_id)
		    WHEN m.classify = 'pet' THEN (select pet_name from pet where pet_id = m.sender_id)
		    WHEN m.classify = 'admin' THEN '관리자'
	    END) AS nick
        FROM messenger m left OUTER JOIN user u
        ON m.sender_id = u.user_id 
        WHERE recv_id = #{userId} AND sender_id NOT IN(SELECT block_id FROM off_msg WHERE user_id = #{userId})
        HAVING nick LIKE CONCAT('%',#{keyword},'%') or m.content LIKE CONCAT('%',#{keyword},'%')
        ORDER BY msg_no DESC
		LIMIT #{pageStart}, 10
	</select>
	
	
	<!-- 받은 쪽지 수 -->
	<select id="countRecvMsg" resultType="int">	
		SELECT count(*)	
		FROM messenger m  
		WHERE m.recv_id = #{userId} AND 
		CASE
			  WHEN m.classify = 'user' THEN ((SELECT nickname FROM user WHERE user_id = m.sender_id) LIKE CONCAT('%',#{keyword},'%') OR content LIKE CONCAT('%',#{keyword},'%'))        
			  WHEN m.classify = 'pet' THEN ((SELECT pet_name FROM pet WHERE pet_id = m.sender_id) LIKE CONCAT('%',#{keyword},'%') OR content LIKE CONCAT('%',#{keyword},'%'))
			  WHEN m.classify = 'admin' THEN m.classify LIKE CONCAT('%',#{keyword},'%') OR m.content LIKE CONCAT('%',#{keyword},'%')
		END
	</select>
	
	
	
	<!-- 읽은 쪽지 마크 해제 -->
	<update id="readChk">
		UPDATE messenger
		SET read_chk = 1
		WHERE msg_no = #{msgNo}
	</update>
	
	
	
	<!-- 쪽지 삭제 -->
	<delete id="delMsg">
		DELETE FROM messenger 
		WHERE msg_no = #{msgNo}
	</delete>
	
	
	<!-- 새쪽지 여부 -->
	<select id="newMsg" resultType="int">
		SELECT count(*) 
		FROM messenger 
		WHERE recv_id = #{userId} AND read_chk = 0 AND sender_id NOT IN(SELECT block_id FROM off_msg WHERE user_id = #{userId})
	</select>
	
	
	
	<!-- 펫편지 수신 여부 -->
	<select id="petLetter" resultType="int">
		SELECT pet_letter
		FROM user
		WHERE user_id = #{userId}
	</select>
	
	
	
	<!-- 쪽지 차단 -->
	<insert id="blockUser" >
		INSERT INTO off_msg(user_id, block_id)
		VALUES(#{userId}, #{blockId})
	</insert>
	
	
	<!-- 차단한 회원 목록 조회 -->
	<select id="blockList" resultMap="BlockMap">
		SELECT o.block_no, o.block_id, o.block_date, u.image_path, u.nickname  
		FROM off_msg o LEFT OUTER JOIN user u
		ON o.block_id  = u.user_id 
		WHERE o.user_id = #{userId}
		ORDER BY block_date DESC
	</select>
	
	
	<!-- 차단 해제 -->
	<delete id="cancleBlock">
		DELETE FROM off_msg 
		WHERE user_id = #{userId} AND block_id = #{blockId}
	</delete>
	
	

</mapper>    