<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ali.today.community.repository.IBoardMapper">

	<resultMap id="BoardMap" type="com.ali.today.community.model.BoardVO">		
		<id property="boardNo" column="board_no" />
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="writer" column="writer"/>
		<result property="regDate" column="reg_date"/>
		<result property="viewCnt" column="view_cnt"/>
		<result property="hashtag" column="hashtag"/>
		<result property="replyCnt" column="reply_cnt"/>	
		<result property="open" column="open"/>	
	</resultMap>	




	<resultMap id="ReplyMap" type="com.ali.today.community.model.ReplyVO">		
		<id property="replyNo" column="reply_no" />
		<result property="boardNo" column="board_no"/>
		<result property="content" column="content"/>
		<result property="replyer" column="replyer"/>
		<result property="replyDate" column="reply_date"/>
		<result property="updateDate" column="reply_date"/>	
	</resultMap>




	<!-- 중복되는 동적 SQL문에 대한 처리(게시판 검색처리) -->
	<sql id="searchBoard">  
		<!-- 동적 SQL구문 -->
		<if test="condition == 'title'">  
		AND title LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'writer'">
		AND writer LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'content'">
		AND content LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="condition == 'titleContent'">
		AND (title LIKE CONCAT('%',#{keyword},'%') OR content LIKE CONCAT('%',#{keyword},'%'))
		</if>
		<if test="condition == 'hashtag'">
		AND hashtag LIKE CONCAT('%',#{keyword},'%')
		</if>
	</sql>
	
	
	
	<!-- 중복되는 동적 SQL문에 대한 처리(관리자 페이지 커뮤니티 게시판 검색) -->
	<sql id="adSearchBoard">  
		<choose>
			<when test = "keyword.equals('')">				
			</when>
			<otherwise>				
				<if test="condition == 'userId'">  
					WHERE writer = #{keyword}
				</if>
				<if test="condition == 'open'">  
					WHERE open = #{keyword}
				</if>
			</otherwise>
		</choose>
	</sql>
	
	
	<!-- 중복되는 동적 SQL문에 대한 처리(관리자 페이지 게시글 정렬방법) -->
	<sql id="orderAdBoard">  
		<if test="order == 'regDate' or order.equals('')">  
		ORDER BY board_no DESC
		</if>
		<if test="order == 'viewCnt'">
		ORDER BY view_cnt DESC
		</if>		
	</sql>
	
	
	

	<!-- 게시글 등록 -->
	<insert id="insert">
		INSERT INTO board (title, content, writer, hashtag)
		VALUES (#{title}, #{content}, #{writer}, #{hashtag})
	</insert>
	
	
	<!-- 게시글 수정 -->
	<update id="update">
		UPDATE board
		SET title = #{title}, content = #{content}, hashtag = #{hashtag}
		WHERE board_no = #{boardNo}
	</update>
	
	
	<!-- 게시글 삭제 -->
	<delete id="delete">
		DELETE FROM board
		WHERE board_no = #{boardNo}
	</delete>
	
	
	<!-- 특정 게시물 조회 -->
	<select id="getArticle" resultMap="BoardMap">
		<!-- SELECT *
		FROM board -->
		SELECT b.board_no, b.title, b.content, b.reg_date, b.writer, b.view_cnt, b.reply_cnt, b.hashtag, u.nickname
		FROM board b LEFT JOIN user u
		ON b.writer = u.user_id
		WHERE b.board_no = #{boardNo}
	</select>
	
	
	<!-- 조회수 업데이트 -->
	<update id="updateViewCnt">
		UPDATE board
		SET view_cnt = view_cnt + 1
		WHERE board_no = #{boardNO}
	</update>
	

	<!-- 검색, 페이징 처리한 게시글 목록 조회 -->
	<select id="getArticleList" resultMap="BoardMap">
		SELECT b.board_no, b.title, b.content, b.reg_date, b.writer, b.view_cnt, b.reply_cnt, b.hashtag, u.nickname
		FROM board b LEFT JOIN user u
		ON b.writer = u.user_id
		WHERE open = 1
		<include refid="searchBoard"/>
		ORDER BY board_no DESC
		LIMIT #{pageStart}, 10 
	</select>
	
	
	<!-- 검색, 페이징 처리한 게시글 수 -->
	<select id="countArticles" resultType="int">
		SELECT COUNT(*)
		FROM board
		WHERE open = 1
		<include refid="searchBoard"/>
	</select>
	
	
	
	<!-- 특정 게시물 댓글 수 -->
	<update id="updateReplyCnt">
		UPDATE board b
		SET b.reply_cnt = (SELECT count(reply_no)
						   FROM reply
						   WHERE board_no = #{boardNO})
		WHERE b.board_no = #{boardNO}
	</update>
	
	
	
	
	<!-- *** 관리자 페이지 ***-->
	<!-- 전체 게시글(특정 계정, 공개여부별) 조회 -->	
	<select id="adAllBoard" resultMap="BoardMap">
		SELECT *
		FROM board			
		<include refid="adSearchBoard"/>
		<include refid="orderAdBoard"/>	
		LIMIT #{pageStart}, 10
	</select>
	
	<!-- 전체 게시글(특정 계정, 공개여부별)  갯수 -->
	<select id="boardCnt" resultType="int">
		SELECT COUNT(*)
		FROM board		
		<include refid="adSearchBoard"/>
	</select>
	
	<!-- 게시글 비공개 전환 -->
	<update id="offBoard">
		UPDATE board
		SET open = 0
		WHERE board_no = #{boardNO}
	</update>

	
	<!-- ////////////////////// 댓글 SQL //////////////////// -->
	
	<!-- 댓글 등록 -->
	<insert id="register">
		INSERT INTO reply (board_no, content, replyer) 
		VALUES(#{boardNo}, #{content}, #{replyer})
	</insert>
	
	
	<!-- 해당 게시물 댓글 전체 조회(페이징) -->
	<select id="getReplyList" resultMap="ReplyMap">
		<!--SELECT * FROM reply 
		WHERE board_no = #{boardNo}
		LIMIT #{pageStart}, 10 -->
		SELECT r.reply_no, r.board_no, r.content, r.replyer, r.reply_date, u.nickname
		FROM reply r LEFT JOIN user u
		ON r.replyer = u.user_id
		WHERE r.board_no = #{boardNo}
		LIMIT #{pageStart}, 10
	</select>
	
	
	
	
	<!-- 특정 댓글 조회 -->
	<select id="getReply" resultMap="ReplyMap">
		<!-- SELECT * FROM reply -->
		SELECT r.reply_no, r.board_no, r.content, r.replyer, r.reply_date, u.nickname
		FROM reply r LEFT JOIN user u
		ON r.replyer = u.user_id
		WHERE r.reply_no = #{replyNo}
	</select>
	
	
	
	<!-- 댓글 수정 -->
	<update id="modifyReply">
		UPDATE reply
		SET content = #{content}
		WHERE reply_no = #{replyNo}
	</update>
	
	
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply">
		DELETE FROM reply
		WHERE reply_no = #{replyNo}
	</delete>
	
	
	
	<!-- 특정 게시물 댓글 전체 삭제 -->
	<delete id="deleteAllReply">
		DELETE FROM reply
		WHERE board_no = #{boardNo}
	</delete>
	
	
	<!-- 해당 게시물 댓글 수 -->
	<select id="countReplies" resultType="int">
		SELECT COUNT(*)
		FROM reply
		WHERE board_no = #{boardNo}
	</select>
	
	
	
	
	<!-- *** 관리자 페이지 ***-->
	<!-- 전체 댓글 갯수 -->
	<select id="replyCnt" resultType="int">
		SELECT COUNT(*)
		FROM reply		
		<choose>
			<when test = "userId == null or userId.equals('')">				
			</when>
			<otherwise>
				WHERE replyer = #{userId}
			</otherwise>
		</choose>
	</select>
	
</mapper>
